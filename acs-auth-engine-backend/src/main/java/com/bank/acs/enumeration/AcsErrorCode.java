package com.bank.acs.enumeration;

import lombok.AllArgsConstructor;
import lombok.Getter;

import static com.bank.acs.enumeration.ErrorType.FATAL;
import static com.bank.acs.enumeration.ErrorType.NON_FATAL;
import static com.bank.acs.enumeration.ErrorType.POP_UP;

@Getter
@AllArgsConstructor
public enum AcsErrorCode {

    //PERSONLOGINS
    INTERNAL_SERVICE_IS_NOT_REACHABLE(FATAL),
    NO_LOGINS_AVAILABLE(FATAL),

    //AUTHENTICATE
    BLOCKED_LOGIN_CODE(FATAL),
    AUTHENTICATION_TYPE_NOT_ALLOWED(NON_FATAL),
    SMART_ID_BLOCKED(NON_FATAL),
    SMART_ID_FAILED(NON_FATAL),
    VALIDATE_SMART_ID(NON_FATAL),
    MOBILE_ID_FAILED(NON_FATAL),
    SMART_ID_FALSE(NON_FATAL),
    THIS_AUTHENTICATION_TYPE_CANNOT_BE_USED_WITH_THIS_LOGIN(NON_FATAL),
    SK74_NO_MID_CERT(NON_FATAL),
    SK73_TIMEOUT(NON_FATAL),
    SK75_MID_CONFIG_ERROR(NON_FATAL),
    SK76_SIM_NOT_AVAILABLE(NON_FATAL),
    OTHER_SESSION_END_RESULT_CODE(NON_FATAL),
    SK77_SMS_SENDING_ERROR(NON_FATAL),
    SK78_SIM_ERROR(NON_FATAL),
    SMART_ID_TIMEOUT(NON_FATAL),
    SESSION_HAS_EXPIRED(NON_FATAL),
    AUTHENTICATION_FAILED(NON_FATAL),
    NO_SMART_ID(NON_FATAL),
    NO_PHONE_NUMBER(NON_FATAL),
    AUTH_TYPE_TEMP_DISABLED(NON_FATAL),

    //CHECKSTATUS
    //CONFIRMCREDENTIALS
    SESSION_DOES_NOT_EXIST(NON_FATAL),
    WRONG_CODE_FOR_CODE_CALCULATOR(POP_UP),
    OPERATION_FAILED(NON_FATAL),
    AUTHENTICATION_IN_PROGRESS(POP_UP),

    //BANKTRON GENERAL
    OPERATION_TERMINATED(NON_FATAL),
    FATAL_EXCEPTION(FATAL),

    //ACS INTERNAL
    LOGIN_NOT_ACTIVE(NON_FATAL),
    NO_SUPPORTED_AUTH_METHODS_AVAILABLE(FATAL),
    EXCEEDED_MAX_ATTEMPTS_FOR_AUTH_METHOD_CHANGE(FATAL),
    EXCEEDED_MAX_ATTEMPTS_FOR_ENTERING_LOGIN(FATAL),
    NO_MATCHING_LOGIN_FOUND(POP_UP),
    NO_ACTIVE_PERSON_ACCOUNTS_FOUND(FATAL),
    NO_PERSON_ACCOUNTS_FOUND(FATAL),
    CARD_IS_BLOCKED(FATAL),
    CARD_BLOCKED_CMS(FATAL),
    CARD_BLOCKED_RMS(FATAL),
    CARD_BLOCKED_ECOMMERCE(FATAL),

    JSON_BODY_VALIDATION_EXCEPTION(NON_FATAL),
    WRONG_APPLICATION_STATE(NON_FATAL),
    TRANSLATED_ERROR(NON_FATAL),

    GENERAL_EXCEPTION(NON_FATAL),
    ;

    private final ErrorType errorType;

}
