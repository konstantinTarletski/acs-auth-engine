<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP CookieManager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:11:07.231</stringProp>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">XX-ScName</stringProp>
            <stringProp name="Header.value">${p_ScName}</stringProp>
          </elementProp>
          <elementProp name="X-MessageID" elementType="Header">
            <stringProp name="Header.name">X-Request-ID</stringProp>
            <stringProp name="Header.value">${__UUID}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">XX-ACC</stringProp>
            <stringProp name="Header.value">${p_acctNumber}</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
      </HeaderManager>
      <hashTree/>
      <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
        <stringProp name="ConstantTimer.delay">10</stringProp>
        <stringProp name="RandomTimer.range">500</stringProp>
      </GaussianRandomTimer>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree - errors" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">errors.xml</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - user counts - peak" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_tc01s_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_count</stringProp>
            <stringProp name="Argument.value">24</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_count</stringProp>
            <stringProp name="Argument.value">20</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_count</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_count</stringProp>
            <stringProp name="Argument.value">6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_duration" elementType="Argument">
            <stringProp name="Argument.name">p_duration</stringProp>
            <stringProp name="Argument.value">3900</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_rampUp" elementType="Argument">
            <stringProp name="Argument.name">p_rampUp</stringProp>
            <stringProp name="Argument.value">300</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MinPause" elementType="Argument">
            <stringProp name="Argument.name">p_MinPause</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MaxPause" elementType="Argument">
            <stringProp name="Argument.name">p_MaxPause</stringProp>
            <stringProp name="Argument.value">15000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01s_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_pacing</stringProp>
            <stringProp name="Argument.value">9000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">abandon</stringProp>
          </elementProp>
          <elementProp name="p_tc03_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_pacing</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">cancel</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - user counts - normal" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_tc01s_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_count</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_count</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_duration" elementType="Argument">
            <stringProp name="Argument.name">p_duration</stringProp>
            <stringProp name="Argument.value">3900</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_rampUp" elementType="Argument">
            <stringProp name="Argument.name">p_rampUp</stringProp>
            <stringProp name="Argument.value">300</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MinPause" elementType="Argument">
            <stringProp name="Argument.name">p_MinPause</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MaxPause" elementType="Argument">
            <stringProp name="Argument.name">p_MaxPause</stringProp>
            <stringProp name="Argument.value">15000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01s_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_pacing</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_pacing</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_pacing</stringProp>
            <stringProp name="Argument.value">30000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - user counts - baseline" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_tc01s_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_duration" elementType="Argument">
            <stringProp name="Argument.name">p_duration</stringProp>
            <stringProp name="Argument.value">3900</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_rampUp" elementType="Argument">
            <stringProp name="Argument.name">p_rampUp</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MinPause" elementType="Argument">
            <stringProp name="Argument.name">p_MinPause</stringProp>
            <stringProp name="Argument.value">10000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MaxPause" elementType="Argument">
            <stringProp name="Argument.name">p_MaxPause</stringProp>
            <stringProp name="Argument.value">15000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01s_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - user counts - debug" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="p_tc01s_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_count" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_count</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_duration" elementType="Argument">
            <stringProp name="Argument.name">p_duration</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_rampUp" elementType="Argument">
            <stringProp name="Argument.name">p_rampUp</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MinPause" elementType="Argument">
            <stringProp name="Argument.name">p_MinPause</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_MaxPause" elementType="Argument">
            <stringProp name="Argument.name">p_MaxPause</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01s_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01s_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc01c_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc01c_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc02_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc02_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_tc03_pacing" elementType="Argument">
            <stringProp name="Argument.name">p_tc03_pacing</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="debug" elementType="Argument">
            <stringProp name="Argument.name">debug</stringProp>
            <stringProp name="Argument.value">TRUE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - urls - LOCAL" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="lt_port" elementType="Argument">
            <stringProp name="Argument.name">lt_port</stringProp>
            <stringProp name="Argument.value">9704</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="lv_port" elementType="Argument">
            <stringProp name="Argument.name">lv_port</stringProp>
            <stringProp name="Argument.value">9701</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ee_port" elementType="Argument">
            <stringProp name="Argument.name">ee_port</stringProp>
            <stringProp name="Argument.value">9709</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - urls - MOCK" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="lt_port" elementType="Argument">
            <stringProp name="Argument.name">lt_port</stringProp>
            <stringProp name="Argument.value">9704</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="lv_port" elementType="Argument">
            <stringProp name="Argument.name">lv_port</stringProp>
            <stringProp name="Argument.value">9701</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ee_port" elementType="Argument">
            <stringProp name="Argument.name">ee_port</stringProp>
            <stringProp name="Argument.value">9709</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">test-acs.luminorgroup.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - urls - MAIN" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="lt_port" elementType="Argument">
            <stringProp name="Argument.name">lt_port</stringProp>
            <stringProp name="Argument.value">9708</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="lv_port" elementType="Argument">
            <stringProp name="Argument.name">lv_port</stringProp>
            <stringProp name="Argument.value">9708</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ee_port" elementType="Argument">
            <stringProp name="Argument.name">ee_port</stringProp>
            <stringProp name="Argument.value">9708</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">test-acs.luminorgroup.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import org.apache.jmeter.services.FileServer; 
import org.apache.commons.io.FileUtils;
import java.nio.file.Files;
import java.nio.file.Paths;
import org.apache.commons.io.FileUtils;

def baseDir = FileServer.getFileServer().getBaseDir();
File file = new File(baseDir, &quot;users-lt-ok.txt&quot;);
file.delete();</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="_debug - LT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lt_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LT.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC01_LT_FULL_SMARTID&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc01s_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;FALSE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler - start" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1205624919">tc01 - Full flow - smart id</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;creq=${__base64Encode(${c_creq},)}&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler - ok" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import org.apache.jmeter.services.FileServer; 
import org.apache.commons.io.FileUtils;
import java.nio.file.Files;
import java.nio.file.Paths;
import org.apache.commons.io.FileUtils;

def baseDir = FileServer.getFileServer().getBaseDir();
File file = new File(baseDir, &quot;users-lt-ok.txt&quot;);
List&lt;String&gt; lines = new LinkedList&lt;&gt;();
lines.add(vars.get(&quot;p_acctNumber&quot;));
org.apache.commons.io.FileUtils.write(file, String.join(&quot;\r\n&quot;, lines), true);
org.apache.commons.io.FileUtils.write(file, &quot;\r\n&quot;, true);</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="_debug- LV" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LV.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC01_LV_FULL_SMARTID&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc01s_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;TRUE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1205624919">tc01 - Full flow - smart id</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import org.apache.jmeter.services.FileServer; 
import org.apache.commons.io.FileUtils;
import java.nio.file.Files;
import java.nio.file.Paths;
import org.apache.commons.io.FileUtils;

def baseDir = FileServer.getFileServer().getBaseDir();
File file = new File(baseDir, &quot;users-lv-ok.txt&quot;);
List&lt;String&gt; lines = new LinkedList&lt;&gt;();
lines.add(vars.get(&quot;p_acctNumber&quot;));
org.apache.commons.io.FileUtils.write(file, String.join(&quot;\r\n&quot;, lines), true);
org.apache.commons.io.FileUtils.write(file, &quot;\r\n&quot;, true);</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc01 - full - smartid - LT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc01s_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lt_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LT.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC01_LT_FULL_SMARTID&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc01s_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;FALSE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1205624919">tc01 - Full flow - smart id</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc01 - full - code_calculator - LT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc01c_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lt_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC01_LT_FULL_CODECALCULATOR&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc01c_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;FALSE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-21607459">tc01 - Full flow - code_calculator</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LT.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc02 - abandon - LT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc02_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lt_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC02_LT_ABANDON&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc02_pacing&quot;));</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-876972877">tc02 - Abandon</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LT.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc03 - cancel - LT" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc03_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lt_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC03_LT_CANCEL&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc03_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;FALSE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2107754085">tc03 - Cancel</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LT.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc01 - full - smartid - LV" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc01s_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LV.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC01_LV_FULL_SMARTID&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc01s_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;TRUE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1205624919">tc01 - Full flow - smart id</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc02 - abandon - LV" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc02_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LV.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC02_LV_ABANDON&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc02_pacing&quot;));
vars.put(&quot;SKIPEnterUserName&quot;, &quot;TRUE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-876972877">tc02 - Abandon</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - tc03 - cancel - LV" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${p_tc03_count}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${p_rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${p_duration}</stringProp>
        <stringProp name="ThreadGroup.delay">${p_delay}</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port">${lv_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">accounts_LV.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">p_acctNumber</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode"></stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">vars.put(&quot;p_ScName&quot;, &quot;TC03_LT_CANCEL&quot;);
vars.put(&quot;p_Pacing&quot;, vars.get(&quot;p_tc03_pacing&quot;));

vars.put(&quot;SKIPEnterUserName&quot;, &quot;TRUE&quot;);</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller - common" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2024019467">Common</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-2107754085">tc03 - Cancel</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module controller - end" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-1245352941">Common - end</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="tc01 - Full flow - code_calculator" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_${p_ScName}_cc" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_1_INIT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;creq=${c_creqEncoded}&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
     &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - translations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/translations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36 Edg/85.0.564.51</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com/browser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,ru;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(vars.get(&quot;SKIPEnterUserName&quot;)==&quot;FALSE&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_2_EnterUserName" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - CONFIRM_USER" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=CONFIRM_USER_LOGIN&amp;enteredLogin=363060&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
     &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_3_Confirmation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT_AUTH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=INIT_AUTH&amp;authMethod=CODE_CALCULATOR&amp;confirmationCode=1234&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_4_End" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - BACK_TO_MERCHANT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=BACK_TO_MERCHANT_SUCCESS&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.transStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">Y</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="tc01 - Full flow - smart id" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_${p_ScName}_smartid" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_1_INIT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;:  &quot;creq=${c_creqEncoded}&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
     &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - translations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/translations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36 Edg/85.0.564.51</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com/browser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,ru;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(vars.get(&quot;SKIPEnterUserName&quot;)==&quot;FALSE&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_2_EnterUserName" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - CONFIRM_USER" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=CONFIRM_USER_LOGIN&amp;enteredLogin=363066&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
     &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_3_Confirmation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT_AUTH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=INIT_AUTH&amp;authMethod=SMART_ID&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
       &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_4_CheckStatus" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - AUTH_STATUS" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=AUTH_STATUS&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: &quot;&quot;,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_5_End" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - BACK_TO_MERCHANT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=BACK_TO_MERCHANT_SUCCESS&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
     &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.transStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">Y</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="tc02 - Abandon" enabled="false"/>
      <hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
        </TestAction>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_${p_ScName}_abandon" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_1_INIT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
  &quot;content&quot;:  &quot;creq=${c_creqEncoded}&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - translations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/translations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36 Edg/85.0.564.51</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com/browser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,ru;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="tc03 - Cancel" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="_${p_ScName}_cancel" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_1_INIT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
  &quot;content&quot;:  &quot;creq=${c_creqEncoded}&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - translations" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/translations</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36 Edg/85.0.564.51</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://test-acs.luminorgroup.com/browser</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,ru;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:12.01</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(vars.get(&quot;SKIPEnterUserName&quot;)==&quot;FALSE&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_2_EnterUserName" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - CONFIRM_USER" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=CONFIRM_USER_LOGIN&amp;enteredLogin=363066&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
   &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_3_Confirmation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - INIT_AUTH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=INIT_AUTH&amp;authMethod=SMART_ID&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_4_CheckStatus" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - AUTH_STATUS" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=AUTH_STATUS&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
      &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - GET_INITIAL_INFORMATION" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=GET_INITIAL_INFORMATION&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
    &quot;acsRenderingType&quot;: null&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${p_MinPause},${p_MaxPause})}</stringProp>
          </TestAction>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="${p_ScName}_5_Cancel" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - ui - tst - CANCEL_AUTH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;,&#xd;
    &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,&#xd;
    &quot;dsTransID&quot;: &quot;${c_dsTransID}&quot;,&#xd;
    &quot;url&quot;: &quot;https://ri1:8446&quot;,&#xd;
    &quot;method&quot;: &quot;POST&quot;,&#xd;
    &quot;content&quot;: &quot;uiAction=BACK_TO_MERCHANT_CANCEL&quot;,&#xd;
    &quot;deviceChannel&quot;: &quot;02&quot;,&#xd;
    &quot;acctNumber&quot;: &quot;${p_acctNumber}&quot;,&#xd;
    &quot;cardExpiryDate&quot;: null,&#xd;
    &quot;challengeWindowSize&quot;: null,&#xd;
    &quot;authenticationData&quot;: null,&#xd;
    &quot;headers&quot;: {&#xd;
        &quot;referer&quot;: null,&#xd;
        &quot;cookie&quot;: null,&#xd;
        &quot;origin&quot;: null,&#xd;
        &quot;accept&quot;: &quot;text/html,application/xhtml+xml&quot;,&#xd;
        &quot;host&quot;: null,&#xd;
        &quot;connection&quot;: null,&#xd;
        &quot;sec-fetch-mode&quot;: null,&#xd;
        &quot;sec-fetch-site&quot;: null,&#xd;
        &quot;sec-fetch-dest&quot;: null,&#xd;
        &quot;accept-language&quot;: null,&#xd;
        &quot;accept-encoding&quot;: null,&#xd;
        &quot;upgrade-insecure-requests&quot;: null,&#xd;
        &quot;content-length&quot;: null,&#xd;
        &quot;content-type&quot;: null,&#xd;
        &quot;cache-control&quot;: null,&#xd;
        &quot;user-agent&quot;: null&#xd;
    },&#xd;
    &quot;acsAuthenticationMethod&quot;: null,&#xd;
    &quot;dsProtocol&quot;: null,&#xd;
    &quot;messageVersion&quot;: null,&#xd;
    &quot;purchaseData&quot;: {&#xd;
        &quot;purchaseDate&quot;: null,&#xd;
        &quot;purchaseCurrency&quot;: &quot;EUR&quot;,&#xd;
        &quot;merchantName&quot;: null,&#xd;
        &quot;purchaseAmount&quot;: &quot;${r_Amount}&quot;&#xd;
    },&#xd;
       &quot;acsRenderingType&quot;: {&#xd;
    		&quot;acsUiTemplate&quot;: null,&#xd;
    		&quot;acsInterface&quot; :&quot;02&quot;&#xd;
    	}&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/challenge</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.transStatus</stringProp>
                <stringProp name="EXPECTED_VALUE">R</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">true</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">X-MessageID</stringProp>
                    <stringProp name="Header.value">${__UUID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2020-10-13T11:13:58.651</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Common" enabled="false"/>
      <hashTree>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable - random amount" enabled="true">
          <stringProp name="maximumValue">100</stringProp>
          <stringProp name="minimumValue">40</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">r_Amount</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - generate random uuids" enabled="true">
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">vars.put(&quot;c_acsTransID&quot;, &quot;${__UUID}&quot;);
vars.put(&quot;c_threeDSServerTransID&quot;, &quot;${__UUID}&quot;);
vars.put(&quot;c_dsTransID&quot;, &quot;${__UUID}&quot;);
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - generate creq" enabled="true">
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">def creq = &quot;&quot;&quot;{
  &quot;acsTransID&quot;: &quot;${c_acsTransID}&quot;,
  &quot;challengeWindowSize&quot;: &quot;01&quot;,
  &quot;messageType&quot;: &quot;CReq&quot;,
  &quot;messageVersion&quot;: &quot;2.1.0&quot;,
  &quot;threeDSServerTransID&quot;: &quot;${c_threeDSServerTransID}&quot;
}
&quot;&quot;&quot;;

def encoded = java.util.Base64.getEncoder().encodeToString(creq.getBytes())


vars.put(&quot;c_creq&quot;, creq);
vars.put(&quot;c_creqEncoded&quot;,encoded);</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - update pacing" enabled="true">
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">int pacing = Integer.parseInt(vars.get(&quot;p_Pacing&quot;));
int max = pacing;
int min = pacing;
if (pacing &gt; 0) {
	max =(int) ((pacing * 0.1) + pacing);	
	min =(int) (pacing - (pacing * 0.1));	
}
vars.put(&quot;min_pacing&quot;, Integer.toString(min));
vars.put(&quot;max_pacing&quot;, Integer.toString(max));
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action - pacing" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${__Random(${min_pacing},${max_pacing})}</stringProp>
        </TestAction>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">log.info(&quot;pacing sleeping&quot;);</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Common - end" enabled="false"/>
      <hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">${__javaScript(vars.get(&quot;debug&quot;)==&quot;TRUE&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action - end" enabled="true">
            <intProp name="ActionProcessor.action">0</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${__Random(${min_pacing},${max_pacing})}</stringProp>
          </TestAction>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="false">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">log.info(&quot;pacing sleeping&quot;);</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
